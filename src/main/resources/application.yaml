spring:
  application:
    name: financeiro
  datasource:
    username: sa
    url: jdbc:h2:file:.data/pagamento
    driverClassName: org.h2.Driver
    password: password
  h2:
    console:
      enabled: 'true'
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    password: admin
    username: admin
application:
  quantidade-pagamento: 50

management:
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
  endpoint:
    health:
      show-details: always
  trace:
    http:
      enabled: true
      include: RESPONSE_HEADERS
server:
  port: 0

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.int}
#TODO: adicionar um direcionamento sincrono entre os microservice caso nao de mandar mensagem para o rabbitmq e colocar na fila
resilience4j:
  circuitbreaker:
    instances:
      compraProduto:
        sliding-window-size: 3
        minimum-number-of-calls: 2
        wait-duration-in-open-state: 50s
